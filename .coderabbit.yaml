# .coderabbit.yaml - Next.js 14.2.26 + TypeScript 환경용 Coderabbit 설정 (수정본)
reviews:
  locale: "ko-KR"                     # 리뷰 언어 기본 설정 (ko-KR)
  
  # 리뷰 언어 설정: 두 가지 방식 모두 가능
  language_settings:
    review_language: "korean"
  
  request_changes_threshold: minor      # 변경 요청 기준 설정 (minor, major, critical 중 선택)
  enable_review_guidance: true          # 리뷰 지침 활성화
  auto_review:
    enabled: true                     # 자동 리뷰 기능 활성화
    auto_incremental_review: true     # 증분 리뷰 활성화
  depth: high                         # 리뷰 깊이 설정: high, medium, low
  
  # 코드 생성 언어 설정
  code_generation_language: "typescript"

  # 언어 및 프레임워크 설정
  language:
    - typescript
    - javascript
    - css
    - html
  
  framework:
    - nextjs
  
  # 파일 필터링 (검토 대상 포함, 제외할 패턴 명시)
  path_filters:
    - "src/**"                      # src 디렉토리 전체
    - "pages/**"                    # Next.js pages 디렉토리
    - "app/**"                      # Next.js app 디렉토리 (App Router)
    - "components/**"               # 컴포넌트 디렉토리
    - "lib/**"                      # 라이브러리 디렉토리
    - "utils/**"                    # 유틸리티 디렉토리
    - "hooks/**"                    # 커스텀 훅 디렉토리
    - "store/**"                    # Zustand 스토어 디렉토리
    - "types/**"                    # 타입 정의 디렉토리
    - "**/*.{ts,tsx,js,jsx}"         # TypeScript/JavaScript 파일
    - "!node_modules/**"            # node_modules 제외
    - "!.next/**"                   # Next.js 빌드 디렉토리 제외
    - "!public/**"                  # public 디렉토리 제외
  
  # 경로별 특수 리뷰 지침
  path_instructions:
    - path: "components/**"
      instructions: >
        컴포넌트 검토 기준: 재사용성, 유지보수성, 성능 최적화, 컴포넌트 분리 및 책임 분리,
        shadcn UI 컴포넌트 사용 시 가이드라인 준수, 화살표 함수 사용, export default 위치(파일 하단),
        Props 타입 명확 정의, TS Doc 주석 적절성.
    
    - path: "pages/**"
      instructions: >
        Next.js 페이지 컴포넌트 규칙 준수: getServerSideProps, getStaticProps 등 데이터 페칭 함수 사용 적절성,
        SEO 최적화(Head, title 등), 화살표 함수 사용 및 export default 위치 점검, 불필요한 리렌더링 방지.
    
    - path: "app/**"
      instructions: >
        Next.js 14 App Router 규칙 준수: Server와 Client 컴포넌트 구분, fetch 함수 사용 등 데이터 페칭 패턴,
        성능 최적화(Suspense, 스트리밍), 병렬 라우트 및 인터셉트 라우트 사용 검토.
    
    - path: "store/**"
      instructions: >
        Zustand 스토어 검토 기준: 스토어 구조, 액션 및 상태 관리 명확성, 불필요한 리렌더링 방지,
        TypeScript 통합(타입 안전성), 필요한 미들웨어 사용 검토.
    
    - path: "lib/supabase/**"
      instructions: >
        Supabase 관련 코드: 보안 모범 사례 준수, 에러 처리, 타입 안전성 확보, 퍼포먼스 최적화.
    
    - path: "**/*.test.{ts,tsx}"
      instructions: >
        테스트 코드 검토: 테스트 범위, 케이스 명확성, 모킹 사용 적절성.
  
  # 기술 스택 명시
  technology_map:
    - name: "nextjs"
      version: "14.2.26"             # 선호하는 Next.js 버전
    - name: "typescript"
    - name: "react"
    - name: "zustand"                # 상태 관리 라이브러리
    - name: "supabase"               # 백엔드 서비스
    - name: "react-hook-form"        # 폼 상태 관리
    - name: "zod"                    # 스키마 검증
    - name: "shadcn-ui"              # UI 컴포넌트 라이브러리
    - name: "tanstack-query"         # 데이터 페칭 및 캐싱
  
  # 코드 스타일 설정
  style:
    typescript:
      prefer_arrow_functions: true   # 화살표 함수 사용 권장
      export_style: "bottom"         # export default를 파일 하단에 위치
    
    naming:
      components: "PascalCase"       # 컴포넌트 이름 규칙
      functions: "camelCase"         # 함수 이름 규칙
      variables: "camelCase"         # 변수 이름 규칙
      interfaces: "PascalCase"       # 인터페이스 이름 규칙
      types: "PascalCase"            # 타입 이름 규칙
  
  # TS Doc 관련 설정
  documentation:
    require_ts_doc: true            # TS Doc 요구
    ts_doc_required_for:
      - "functions"                 # 함수에 TS Doc 필요
      - "interfaces"                # 인터페이스에 TS Doc 필요
      - "classes"                   # 클래스에 TS Doc 필요
      - "type_aliases"              # 타입 별칭에 TS Doc 필요
  
  # 무시할 파일 및 패턴
  ignore:
    - "**/*.d.ts"                   # 타입 선언 파일
    - "**/*.config.js"              # 설정 파일 (JavaScript)
    - "**/*.config.ts"              # 설정 파일 (TypeScript)
    - "package.json"
    - "package-lock.json"
    - "yarn.lock"
    - "pnpm-lock.yaml"
    - ".eslintrc.*"                 # ESLint 설정
    - "tsconfig.json"               # TypeScript 설정
    - ".prettierrc.*"               # Prettier 설정
    - "next.config.*"               # Next.js 설정 파일
